---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default_view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  labels:
    system: price-service
    app: prometheus
    role: monitoring
data:
  prometheus.yml: |2
    global:
      scrape_interval: 10s
      external_labels:
        system: price-service
    
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets: ['localhost:9090']

      - job_name: springboot-demo-app
        metrics_path: "/actuator/prometheus"
        scrape_interval: 30s
        static_configs:
          - targets: ['product-service.spring-observability.svc.cluster.local:8080','price-service.spring-observability.svc.cluster.local:8081']
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  labels:
    system: price-service
    app: otel-collector
    role: monitoring
data:
  otel-collector-config.yml: |2
    receivers:
      otlp:
        protocols:
          grpc:

    exporters:
      jaeger:
        endpoint: jaeger:14250
        tls:
          insecure: true

    processors:
      batch:

    extensions:
      health_check:

    service:
      extensions:
        - health_check
      pipelines:
        traces:
          receivers:
            - otlp
          processors:
            - batch
          exporters:
            - jaeger
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    system: price-service
    name: prometheus
    app: prometheus
    role: monitoring
    app.kubernetes.io/part-of: monitoring
    app.openshift.io/runtime: prometheus
  annotations:
    app.openshift.io/connects-to: price-service
spec:
  replicas: 1
  selector:
    matchLabels:
      name: prometheus
  template:
    metadata:
      labels:
        system: price-service
        name: prometheus
        app: prometheus
        role: monitoring
    spec:
      containers:
        - image: quay.io/prometheus/prometheus:v2.43.0
          name: prometheus
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
      volumes:
        - name: prometheus-data
          emptyDir: { }
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  labels:
    system: price-service
    name: jaeger
    app: jaeger
    role: monitoring
    app.kubernetes.io/part-of: monitoring
    app.openshift.io/runtime: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jaeger
  template:
    metadata:
      labels:
        system: price-service
        name: jaeger
        app: jaeger
        role: monitoring
    spec:
      containers:
        - image: jaegertracing/all-in-one:1
          name: jaeger
          ports:
            - containerPort: 16686
            - containerPort: 14268
            - containerPort: 14250
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    system: price-service
    name: otel-collector
    app: otel-collector
    role: monitoring
    app.kubernetes.io/part-of: monitoring
    app.openshift.io/runtime: opentelemetry
  annotations:
    app.openshift.io/connects-to: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      name: otel-collector
  template:
    metadata:
      labels:
        system: price-service
        name: otel-collector
        app: otel-collector
        role: monitoring
    spec:
      containers:
        - image: otel/opentelemetry-collector:0.75.0
          name: otel-collector
          args:
            - "--config=/conf/otel-collector-config.yml"
          ports:
            - name: health-check
              containerPort: 13133
            - name: otlp-receiver
              containerPort: 4317
          volumeMounts:
            - name: otel-collector-config
              mountPath: /conf
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
          livenessProbe:
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              port: health-check
              scheme: HTTP
              path: /
          readinessProbe:
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              port: health-check
              scheme: HTTP
              path: /
          startupProbe:
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              port: health-check
              scheme: HTTP
              path: /
      volumes:
        - name: otel-collector-config
          configMap:
            name: otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    name: prometheus
    system: price-service
    app: prometheus
    role: monitoring
spec:
  ports:
    - port: 9090
      name: scrape
      protocol: TCP
      targetPort: 9090
  selector:
    name: prometheus
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  labels:
    name: jaeger
    system: price-service
    app: jaeger
    role: monitoring
spec:
  ports:
    - port: 16686
      name: ui
      protocol: TCP
      targetPort: 16686
    - port: 14268
      name: thrift
      protocol: TCP
      targetPort: 14268
    - port: 14250
      name: grpc
      protocol: TCP
      targetPort: 14250
  selector:
    name: jaeger
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    name: otel-collector
    system: price-service
    app: otel-collector
    role: monitoring
spec:
  ports:
    - port: 13133
      name: healthcheck
      protocol: TCP
      targetPort: 13133
    - port: 4317
      name: grpc
      protocol: TCP
      targetPort: 4317
  selector:
    name: otel-collector
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: monitoring
    system: price-service
    name: prometheus
    app: prometheus
    role: monitoring
  name: prometheus
spec:
  port:
    targetPort: 9090
  to:
    kind: Service
    name: prometheus
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: monitoring
    system: price-service
    name: jaeger
    app: jaeger
    role: monitoring
  name: jaeger
spec:
  port:
    targetPort: 16686
  to:
    kind: Service
    name: jaeger